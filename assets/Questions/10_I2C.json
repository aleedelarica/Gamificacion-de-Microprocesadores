[
  {
    "PREGUNTA": "I2C: Se quiere escribir un solo byte para configurar un registro. Completa.

		___(1); 
		if(___(2) ___(3)<<1)) != 0){ //NACK
			I2C1GeneraStop(); // Abortamos
			return -1; 
		} 
		if(I2C1EscribeByte(___(4)) != 0){ //NACK
			I2C1GeneraStop(); // Abortamos 
			return -1;
		} 
		if(I2C1EscribeByte(___(5)) != 0){ //NACK
			I2C1GeneraStop(); // Abortamos
			return -1; 
		} 
		___(6);
",
    "HUECOS": 6,
    "OPCIONES": 10,
    "OPCION A": "I2C1GeneraStart()",
    "OPCION B": "I2C1GeneraStop()",
    "OPCION C": "I2C1EscribeByte(",
    "OPCION D": "ADDRESS_SENSOR",
    "OPCION E": "REG_SENSOR",
    "OPCION F": "Valor",
	"OPCION G": "LeeByte(",
	"OPCION H": "0",
	"OPCION I": "1",
	"OPCION J": "I2C1GeneraReStart()",
    "ENTRADA 1": "I2C1GeneraStart()",
    "ENTRADA 2": "I2C1EscribeByte(",
    "ENTRADA 3": "ADDRESS_SENSOR",
	"ENTRADA 4": "REG_SENSOR",
	"ENTRADA 5": "Valor",
    "ENTRADA 6": "I2C1GeneraStop()"
  },
  {
    "PREGUNTA": "I2C: Se quiere leer un id de dos byte en registros consecutivos, primero parte alta en el registro 0x80. Completa.

	int LeerChipId(int *p_id) { 
		int ok = -1; // -1 indica error de recepción
		*p_id =0;
		I2C1GeneraStart(); 
		if(I2C1EscribeByte(___(1)<<1) != 0){ //NACK
			I2C1GeneraStop(); // Abortamos
			return ok; 
		} 
		if(I2C1EscribeByte(0x80) != 0){ //NACK
			I2C1GeneraStop(); // Abortamos 
			return ok;

		} 
		___(2)
		if(I2C1EscribeByte(ADDRESS_SENSOR<<___(3)|1) != 0){ //NACK
			I2C1GeneraStop(); // Abortamos
			return ok; 
		}
		ok=0;
		*p_id =	I2C1LeeByte(___(4) << 8;					
		*p_id |= I2C1LeeByte(___(5)); // Envía NACK para indicar que ya 		       // no queremos más datos 
		I2C1GeneraStop();
		return ok;
	}",
    "HUECOS": 5,
    "OPCIONES": 10,
    "OPCION A": "I2C1GeneraStart()",
    "OPCION B": "I2C1GeneraStop()",
    "OPCION C": "I2C1EscribeByte(",
    "OPCION D": "ADDRESS_SENSOR",
    "OPCION E": "REG_SENSOR",
    "OPCION F": "Valor",
	"OPCION G": "LeeByte(",
	"OPCION H": "0",
	"OPCION I": "1",
	"OPCION J": "I2C1GeneraReStart()",
    "ENTRADA 1": "ADDRESS_SENSOR",
    "ENTRADA 2": "I2C1GeneraReStart()",
    "ENTRADA 3": "1",
	"ENTRADA 4": "0",
	"ENTRADA 5": "1"
  },
    {
    "PREGUNTA": "I2C: Se quiere escribir a 400kHz en dos registros no consecutivos los valores a y b. Completa.
	#define I2C400KHZ 1 
	#define I2C100KHZ 0 

	int EscrituraConfiguracion(uint8_t a, uint8_t b) { 
		int ok = -1; // -1 indica error de recepción
		I2C1Inicializa(___(1));
		I2C1GeneraStart(); 
		if(I2C1EscribeByte(ADDRESS_SENSOR<<1|___(2)) != 0){ //NACK
			I2C1GeneraStop(); // Abortamos
			return ok; 
		} 
		if(I2C1EscribeByte(0x2F) != 0){ //NACK
			I2C1GeneraStop(); // Abortamos 
			return ok;

		} 
		if(I2C1EscribeByte(a) != 0){ //NACK
			I2C1GeneraStop(); // Abortamos 
			return ok;

		} 
		___(3) ;
		if(I2C1EscribeByte(ADDRESS_SENSOR<<1|___(4)) != 0){ //NACK
			I2C1GeneraStop(); // Abortamos
			return ok; 
		}
		if(I2C1EscribeByte(0x35) != 0){ //NACK
			I2C1GeneraStop(); // Abortamos 
			return ok;

		} 
		if(I2C1EscribeByte(b) != __(5)){ //NACK
			I2C1GeneraStop(); // Abortamos 
			return ok;

		} 	
		ok=0;		
		I2C1GeneraStop();
		return ok;
	}",
    "HUECOS": 5,
    "OPCIONES": 10,
    "OPCION A": "I2C1GeneraStart()",
    "OPCION B": "I2C1GeneraStop()",
    "OPCION C": "I2C1EscribeByte(",
    "OPCION D": "ADDRESS_SENSOR",
    "OPCION E": "REG_SENSOR",
    "OPCION F": "Valor",
	"OPCION G": "LeeByte(",
	"OPCION H": "0",
	"OPCION I": "1",
	"OPCION J": "I2C1GeneraReStart()",
    "ENTRADA 1": "1",
    "ENTRADA 2": "0",
    "ENTRADA 3": "I2C1GeneraReStart()",
	"ENTRADA 4": "0",
	"ENTRADA 5": "0"
  },
  {
    "PREGUNTA": "PREGUNTA FINAL: Tenemos la siguiente cabecera void function (int *pid)
	
	main...
	
	int ____(1) variable;
	int ____(2) vector[2];
	
	funtion (____(3)variable)
	funtion (____(4)vector)
	funtion (____(5)vector[1])
	
	Dentro de la función...
	
	____(6) pid = 4;
	",
    "HUECOS": 6,
    "OPCIONES": 3,
    "OPCION A": "(Nada)",
    "OPCION B": "*",
    "OPCION C": "&",
    "ENTRADA 1": "(Nada)",
    "ENTRADA 2": "(Nada)",
    "ENTRADA 3": "&",
	"ENTRADA 4": "(Nada)",
	"ENTRADA 5": "&",
    "ENTRADA 6": "*"
  }
]